{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport * as PokemonActions from '../actions/pokemon.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/pokemon.service\";\nexport let PokemonEffects = /*#__PURE__*/(() => {\n  class PokemonEffects {\n    constructor(actions$, _pokemon) {\n      this.actions$ = actions$;\n      this._pokemon = _pokemon;\n      this.loadPokemon$ = createEffect(() => this.actions$.pipe(ofType(PokemonActions.loadPokemon), switchMap(() => {\n        return this._pokemon.getPokemons().pipe(map(result => PokemonActions.loadPokemonSuccess({\n          pokemons: result\n        })), catchError(error => of(PokemonActions.loadPokemonFailure({\n          pokemons: [],\n          error\n        }))));\n      })));\n      this.loadInit$ = createEffect(() => {\n        return of(PokemonActions.loadPokemon());\n      });\n    }\n\n  }\n\n  PokemonEffects.ɵfac = function PokemonEffects_Factory(t) {\n    return new (t || PokemonEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.PokemonService));\n  };\n\n  PokemonEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonEffects,\n    factory: PokemonEffects.ɵfac\n  });\n  return PokemonEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}