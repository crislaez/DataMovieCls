{"ast":null,"code":"import { catchError, map, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@clmovies/core/services/core-config.service\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor(http, _coreConfig) {\n      this.http = http;\n      this._coreConfig = _coreConfig;\n      this.baseURL = `${this._coreConfig.getEndpoint()}`;\n      this.apiKey = this._coreConfig.getApiKey();\n    }\n\n    getSearch(searchName, type, page) {\n      console.log({\n        searchName\n      });\n      console.log({\n        type\n      });\n      console.log({\n        page\n      });\n\n      if (type === \"movie\") {\n        return this.http.get(`${this.baseURL}search/movie?api_key=${this.apiKey}&query=${searchName}&page=${page}`).pipe(map(({\n          page,\n          results,\n          total_pages,\n          total_results\n        }) => ({\n          search: results || [],\n          page: page || 1,\n          total_pages: total_pages || 0,\n          total_results: total_results || 0\n        })), tap(res => console.log(res)), catchError(error => {\n          return throwError(() => error);\n        }));\n      }\n\n      return this.http.get(`${this.baseURL}search/tv?api_key=${this.apiKey}&query=${searchName}&page=${page}`).pipe(map(({\n        page,\n        results,\n        total_pages,\n        total_results\n      }) => ({\n        search: results || [],\n        page: page || 1,\n        total_pages: total_pages || 0,\n        total_results: total_results || 0\n      })), tap(res => console.log(res)), catchError(error => {\n        return throwError(() => error);\n      }));\n    }\n\n  }\n\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CoreConfigService));\n  };\n\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module"}