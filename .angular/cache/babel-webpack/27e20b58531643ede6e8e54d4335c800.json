{"ast":null,"code":"import { EntityStatus } from '@clmovies/shareds/utils/utils/functions';\nimport { createReducer, on } from '@ngrx/store';\nimport * as TvActions from '../actions/tv.actions';\nexport const tvFeatureKey = 'tv';\nconst initialState = {\n  tvs: [],\n  tvsGenre: [],\n  menu: [],\n  serie: null,\n  status: EntityStatus.Initial,\n  page: 1,\n  total_pages: 0,\n  total_results: 0,\n  error: undefined\n};\nexport const reducer = createReducer(initialState, on(TvActions.loadMenuTv, state => Object.assign(Object.assign({}, state), {\n  status: EntityStatus.Pending,\n  error: undefined\n})), on(TvActions.saveMenuTv, (state, {\n  menu,\n  status,\n  error\n}) => Object.assign(Object.assign({}, state), {\n  menu,\n  status,\n  error\n})), on(TvActions.loadTvs, state => Object.assign(Object.assign({}, state), {\n  status: EntityStatus.Pending,\n  error: undefined\n})), on(TvActions.saveTvs, (state, {\n  tvs,\n  page,\n  total_pages,\n  total_results,\n  status,\n  error\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    tvs: [...(page !== 1 ? state === null || state === void 0 ? void 0 : state.tvs : []), ...tvs],\n    page,\n    total_pages,\n    total_results,\n    status,\n    error\n  });\n}), on(TvActions.loadTvSerie, state => Object.assign(Object.assign({}, state), {\n  status: EntityStatus.Pending,\n  error: undefined\n})), on(TvActions.saveTvsSerie, (state, {\n  serie,\n  status,\n  error\n}) => Object.assign(Object.assign({}, state), {\n  serie,\n  status,\n  error\n})), on(TvActions.loadTvsGenre, state => Object.assign(Object.assign({}, state), {\n  status: EntityStatus.Pending,\n  error: undefined\n})), on(TvActions.saveTvsGenre, (state, {\n  tvs,\n  page,\n  total_pages,\n  total_results,\n  status,\n  error\n}) => Object.assign(Object.assign({}, state), {\n  tvsGenre: [...(state === null || state === void 0 ? void 0 : state.tvsGenre), ...tvs],\n  page,\n  total_pages,\n  total_results,\n  status,\n  error\n})), on(TvActions.deleteTvs, state => Object.assign(Object.assign({}, state), {\n  tvs: [],\n  page: 1,\n  total_pages: 0,\n  total_results: 0\n})), on(TvActions.deleteTvsGenre, state => Object.assign(Object.assign({}, state), {\n  tvsGenre: [],\n  page: 1\n})));","map":null,"metadata":{},"sourceType":"module"}